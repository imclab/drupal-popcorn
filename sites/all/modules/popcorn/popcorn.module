<?php 

define("POPCORN_TEASER", 0);
define("POPCORN_FULL", 1);
define("POPCORN_KERNELS", 2);

function popcorn_init(){
    $element = array(
        '#type' => 'html_tag',
        '#tag' => 'meta',
        '#attributes' => array(
            'content' => 'chrome=1',
            'http-equiv' => 'X-UA-Compatible',
        ),
    );
    drupal_add_html_head($element, 'chrome_frame_meta_tag');
}

function popcorn_node_view($node, $view_mode, $langcode){
    if ($node->type == 'film_clip' && $view_mode == 'full'){
        drupal_add_js('http://ajax.googleapis.com/ajax/libs/chrome-frame/1/CFInstall.min.js', 'external');
        drupal_add_js('sites/all/libraries/popcorn-js/popcorn.js');
        drupal_add_js('sites/all/modules/popcorn/js/popcorn.drupal.js');
        drupal_add_css('modules/contextual/contextual.css');
        
        drupal_add_js('sites/all/modules/popcorn/js/tinybox.js');
        drupal_add_css('sites/all/modules/popcorn/js/tinybox.css');
        
        drupal_add_js('sites/all/modules/popcorn/js/jquery.disable.text.select.pack.js');
        drupal_add_js('(function($){$(document).ready(function(){$("#scrubb").disableTextSelect();$("#volume-wrapper").disableTextSelect();});})(jQuery);', 'inline');

        drupal_add_js('sites/all/modules/popcorn/js/controls.js');
        
        $showHelp = FALSE;
        if (!isset($_COOKIE['firstVisit'])){
            setcookie('firstVisit', 'no', mktime(0,0,0,12,31,2030));
            $showHelp = TRUE;
        }

        drupal_add_js(array(
            'popcorn' => array(
                'nid' => $node->nid,
                'showHelp' => $showHelp,
            )
        ), 'setting');
    }
        drupal_add_css(path_to_theme() . '/css/video-controls.css');
        drupal_add_css(path_to_theme() . '/css/kernels.css');
        drupal_add_css(path_to_theme() . '/css/history.css');
}

function popcorn_node_view_alter(&$build) {
  if (isset($build['links']['node']['#links']['node-readmore']['title'])) {
    //$build['links']['node']['#links']['node-readmore']['title'] = 'Read more...';
  }
}

function popcorn_menu(){
  $items['popcorn/%'] = array(
    'page callback' => '_popcorn_load_node',
    'access arguments' => array('access content'),
    'page arguments' => array(1, 2),
    'type' => MENU_CALLBACK,
  );
  /*
  $items['popcorn/%/kernels'] = array(
    'page callback' => '_popcorn_load_kernels',
    'access arguments' => array('access content'),
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  */
  return $items;
}

function _popcorn_load_kernels($node){
  $kernels = array();
  if (isset($node->field_track_events['und'])){
    foreach ($node->field_track_events['und'] as $index => $trackEvent){
      $event = field_collection_item_load($trackEvent['value']);
      $eventNode = node_load($event->field_event['und'][0]['nid']);
      $term = taxonomy_term_load($eventNode->field_subject['und'][0]['tid']);
      $kernels[$index] = array(
      'start' => $event->field_start['und'][0]['value'],
      'end' => $event->field_end['und'][0]['value'],
      'nid' => $event->field_event['und'][0]['nid'],
      'dest' => 'highlight',
      'subject' => $term->name,
      'type' => str_replace('_', '-', $eventNode->type)
      );
    }
  }
  return $kernels;
}

function _popcorn_load_node($nid, $type = 'full'){
  $node = node_load($nid);
  switch ($type){
    case 'kernels':
      $kernels = _popcorn_load_kernels($node);
      $output = array(
        'type' => POPCORN_KERNELS,
        'data' => $kernels
      );
      if (isset($node->field_javascript['und'])){
          $output['data']['js'] = file_create_url($node->field_javascript['und'][0]['uri']);
      }
      break;
    case 'teaser':
      $term = taxonomy_term_load($node->field_subject['und'][0]['tid']);
      $output = array(
        'type' => POPCORN_TEASER,
        'data' => array(
          'content' => drupal_render(node_view($node, $type)),
          'subject' => $term->name,
          'contentType' => $node->type,
        )
      );
      break;
    case 'full':
      if ($node->type == 'film_clip'){
        $videos = array();
        foreach ($node->field_video_file['und'] as $video){
          $videos[] = array(
            'src' => file_create_url($video['uri']),
            'mime' => $video['filemime']
          );
        }
        $kernels = _popcorn_load_kernels($node);
        $full = array(
        	'videos' => $videos,
        	'kernels' => $kernels
        );
      }
      else{
        $full = drupal_render(node_view($node));
      }
      $output = array(
        'type' => POPCORN_FULL,
        'data' => $full
      );
      break;
    default:
      $output = drupal_render(node_view($node, $type));
  }
  print drupal_json_encode($output);
  exit();
}
